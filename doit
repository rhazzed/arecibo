#!/bin/sh
##############################################
# doit - A test to combine WiFi sniffing and pan/tilt movement
#
# HISTORICAL INFORMATION -
#
#  2019-11-26  msipin  Added stop-count on tcpdump, and post-processing of
#                      WiFi scanning results
##############################################

wifiIfName=`iwconfig 2>&1 | grep "IEEE 802.11" | grep "ESSID:off.any" | tail -1 | awk '{ print $1 }'`

# TO-DO: Pickup channel number from the command-line
channel=8
AP_MAC="b0:39:56:17:88:20"	# F---A--o
#channel=1 # A few different SSIDs with spaces
#AP_MAC="34:db:9c:6d:d8:8e"	# (MySpectrumWiFi88-2G)


if [ -n ""$wifiIfName"" ]
then
	echo
	# So far, mon0 always winds up being the interface name + "mon" tacked on the end
	mon0="${wifiIfName}mon"
	echo "Using adapters ${wifiIfName} and ${mon0}..."
else
	echo
	echo "NO suitable (and/or unassociated) WiFi adapter found."
	echo "Exiting."
	echo
	exit 2
fi




shutdown()
{
	airmon-ng stop $mon0 >/dev/null 2>1
	# NOTE: The above command terminates all processes (tcpdump, etc) using the $mon0 interface,
	#       so no need to kill them "individually" once the above command is issued.
	ifconfig $wifiIfName up >/dev/null 2>1
}

trap "shutdown;exit 0" 0 1 2 3 6 12 15


airmon-ng start ${wifiIfName} >/dev/null 2>1

ifconfig $mon0 promisc >/dev/null 2>1
##dumpcap -I -c 4 -i $mon0

## CHANGE FREQUENCY TO THE CHOSEN ONE -
iwconfig ${wifiIfName} channel $channel >/dev/null 2>1
iwconfig ${mon0} channel $channel >/dev/null 2>1
result=$?
#echo "DEBUG: Result: $result"
if [ ""$result"" -ne "0" ]
then
	echo "*** FAILURE moving ${wifiIfName} to channel ${channel} ***"
	if [ ""$channel"" -gt 14 ]
	then
		echo "                (Is ${wifiIfName} even capable of moving to 5GHz channel ${channel}?)"
	fi
	exit 0
fi


# TO-DO: Execute pan/tilt position directive - e.g. goto az el
el=10
az=0

for az in -90 -80 -70 -60 -50 -40 -30 -20 -10 0 10 20 30 40 50 60 70 80 90
do

    cmd="python goto.py $az $el >/dev/null"
    eval $cmd


    # Only search for BEACONS, so we can lock on 1 Mb/s transmissions from the AP -
    tcpdump -i $mon0 -c 10 -e -s 256 type mgt subtype beacon and ether host ${AP_MAC} 2>/dev/null | awk -v AZ=$az -v EL=$el 'BEGIN {
	num=0
}{

##printf("\nDEBUG: [[%s]]\n",$0);

if ((NF > 22) && ($18 == "Beacon")) {

	CH=$4" "$5
	# 2.4 GHz -
	if ($4 == "2412") CH="CH 1"
	if ($4 == "2417") CH="CH 2"
	if ($4 == "2422") CH="CH 3"
	if ($4 == "2427") CH="CH 4"
	if ($4 == "2432") CH="CH 5"
	if ($4 == "2437") CH="CH 6"
	if ($4 == "2442") CH="CH 7"
	if ($4 == "2447") CH="CH 8"
	if ($4 == "2452") CH="CH 9"
	if ($4 == "2457") CH="CH 10"
	if ($4 == "2462") CH="CH 11"

	# 5 GHz -
	if ($4 == "5180") CH="CH 36"
	if ($4 == "5190") CH="CH 38"
	if ($4 == "5200") CH="CH 40"
	if ($4 == "5210") CH="CH 42"
	if ($4 == "5220") CH="CH 44"
	if ($4 == "5230") CH="CH 46"
	if ($4 == "5240") CH="CH 48"
	if ($4 == "5745") CH="CH 149"
	if ($4 == "5755") CH="CH 151"
	if ($4 == "5765") CH="CH 153"
	if ($4 == "5775") CH="CH 155"
	if ($4 == "5785") CH="CH 157"
	if ($4 == "5795") CH="CH 159"
	if ($4 == "5805") CH="CH 161"
	if ($4 == "5825") CH="CH 165"

	dbm=substr($7,1,length($7)-3)
	num++
	vals[num] = 0 + dbm
	##printf("%s,%s,%s,%s,", $1,CH,dbm,$11);
	##for (i=19;i <= NF;i++) {
	##	printf("%s",$i)
	##	if ($i ~/\)$/) break;
	##	else printf(" ")
	##}
	##printf("\n");
};

} END {

    avg=-999
    if (num > 0) {
	tot=0
	# Add up all dbm values
	for (ii=1;ii <= num;ii++) {
		tot = tot + vals[ii]
	}
	# Compute average of all dbm values
	avg = tot / num
    }
    printf("%0.1f,%d,%d\n",avg,AZ,EL)

}'

done | sort -n | tail -1 | awk -F"," '{

	dbm=$1
	az=$2
	el=$3

	printf("Best direction: dbm=%.1f  az=%d  el=%d\n",dbm,az,el)
	cmd = "python goto.py " az " " el " >/dev/null 2>1"
	system(cmd)
}'

exit 0

-68.8,90,35
-67.8,45,35
-65.0,0,35
-62.8,-90,35
-58.4,-45,35




    $1          $2   #3   $4  $5  $6    $7     $8    $9   $10        $11              $12  $13        $14             $15             $16   $17      $18     $19 - $(??)
20:19:48.003507 1.0 Mb/s 2427 MHz 11b -38dBm signal antenna 1 BSSID:aa:bb:cc:11:22:33 (oui Unknown) DA:Broadcast SA:aa:bb:cc:11:22:33 (oui Unknown) Beacon (sipynet)
                                                   -4   -3  -2  -1      NF-0
          [1.0* 2.0* 5.5* 11.0* 6.0 9.0 12.0 18.0 Mbit] ESS CH: 4, PRIVACY[|802.11]

